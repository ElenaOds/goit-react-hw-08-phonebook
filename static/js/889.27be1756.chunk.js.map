{"version":3,"file":"static/js/889.27be1756.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["import styled from '@emotion/styled';\n\n\nexport const Form = styled.form`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nmargin-bottom: 20px;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 5px;\n  align-items: center;\n  font-size: 20px;\n  text-align: left;\n  width: 30%;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  margin-bottom: 20px;\n  padding: 15px;\n  width: 30%;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 15px;\n\n  &:focus,\n  &:hover {\n   border: 3px solid #1976d2;\n   outline: inherit;\n`;\n","export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilter = state => state.filter.filter;","import React from 'react';\nimport { useState } from 'react';\nimport {Form, Label, Input} from './ContactForm.styled';\nimport Button from '@mui/material/Button';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { getContacts } from 'redux/contacts/selectors';\n\n\n  export const ContactForm = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(getContacts);\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n \n    const handleChange = e => {\n      const { name, value } = e.target;\n      \n      switch (name) {\n        case 'name':\n          setName(value);\n          break;\n\n        case 'number':\n          setNumber(value);\n          break;\n\n          default:\n            return;\n      }\n    };\n    \n    const handleSubmit = e => {\n      e.preventDefault(); \n      const newContact = { \n        name, \n        number,\n      };\n      const existingContact  = contacts.find(\n        contact => contact.name === name || contact.number === number\n      );\n      if(existingContact) {\n        alert(`${name} is already in contacts.`);\n        return;\n      } else {\n      dispatch(addContact(newContact));\n      reset();  \n    } \n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n      return (\n        <Form onSubmit={handleSubmit}>\n          <Label> Name </Label>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            placeholder=\"Enter name\"\n            value={name}\n            onChange={handleChange}\n          />\n          <Label>Number</Label>\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            placeholder=\"Enter phone number\"\n            value={number}\n            onChange={handleChange}\n          />\n          <Button variant=\"contained\" type=\"submit\">\n            Add contact\n          </Button>\n        </Form>\n      );\n  };","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n`;\n\nexport const ListItem = styled.li`\nmargin-bottom: 20px;\nlist-style: none;\n`;\n\nexport const Button = styled.button`\ndisplay: inline-block;\nmargin-left: 10px;\npadding: 5px;\nbackground-color: #fff;\nfont-size: 14px;\nwidth: 70px;\nbox-shadow: 3px 6px 20px rgba(0.12, 0.12, 0.12, 0.12), \n1px 3px 4px rgba(0, 0, 0, 0.14), \n0px 0px 2px rgba(0, 0, 0, 0.2);\nborder-radius: 5px;\nborder: inherit;\ncursor: pointer;\n\n&:focus,\n&:hover {\n    border: 3px solid #1976d2;\n    outline: inherit;\n}\n`;","import { List, ListItem, Button } from './ContactList.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts, getFilter } from '../../redux/contacts/selectors';\nimport {fetchContacts, deleteContact} from '../../redux/contacts/operations';\nimport { useEffect} from 'react';\n\n\n\nexport const ContactList = () => {\n   const dispatch = useDispatch();\n   const contacts = useSelector(getContacts);\n   const filter = useSelector(getFilter);\n\n   useEffect(() => {\n      dispatch(fetchContacts());\n    }, [dispatch]);\n\n   const getFilteredContacts = () => {\n      const filterContactsList = contacts.filter(contact => {\n        return contact.name\n          .toLowerCase()\n          .includes(filter.toLowerCase());\n      });\n    \n      return filterContactsList;\n    };\nreturn (\n   <>\n   {contacts.length > 0 && (\n      <List>\n      {getFilteredContacts().map((contact, id) => (\n     <ListItem key={id}>\n       {contact.name}: {contact.number}\n       <Button onClick={() => dispatch(deleteContact(contact.id))}>\n        Delete</Button>\n     </ListItem>\n    ))}\n    </List>\n   )}\n   </> \n)\n}","import styled from '@emotion/styled';\n\nexport const Box = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\ntext-align: left;\n`;\n\nexport const Label = styled.label`\ndisplay: block;\nalign-items: center;\n  font-size: 20px;\n  text-align: left;\n  width: 30%;\n  margin-bottom: 5px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  padding: 15px;\n  width: 30%;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 15px;\n\n  &:focus,\n  &:hover {\n   border: 3px solid #1976d2;\n   outline: inherit;\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport {Box, Label, Input} from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const handleChange = e => {\n    const { value } = e.target;\n    dispatch(setFilter(value));\n  }; \n\n  return (\n    <Box>\n    <Label>Find contacts by Name </Label>\n    <Input\n      type=\"text\"\n      name=\"filter\"\n      placeholder=\"Enter filter\"\n      value={filter}\n      onChange={handleChange}\n    />\n   \n  </Box>\n  )\n}\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { getIsLoading } from 'redux/contacts/selectors';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from '../components/Loader/Loader';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Phonebook</title>\n      </Helmet>\n      <ContactForm />\n      <div>{isLoading && <Loader/>}</div>\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["Form","styled","Label","Input","getContacts","state","contacts","items","getIsLoading","isLoading","getFilter","filter","ContactForm","dispatch","useDispatch","useSelector","useState","name","setName","number","setNumber","handleChange","e","target","value","reset","onSubmit","preventDefault","newContact","find","contact","alert","addContact","type","pattern","title","required","placeholder","onChange","Button","variant","List","ListItem","ContactList","useEffect","fetchContacts","length","toLowerCase","includes","map","id","onClick","deleteContact","Box","Filter","setFilter","Contacts","Helmet","Loader"],"sourceRoot":""}