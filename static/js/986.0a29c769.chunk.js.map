{"version":3,"file":"static/js/986.0a29c769.chunk.js","mappings":"4QAGaA,EAAOC,EAAAA,EAAAA,KAAH,6GAOJC,EAAQD,EAAAA,EAAAA,MAAH,kJASLE,EAAQF,EAAAA,EAAAA,MAAH,iSAiBLG,EAASH,EAAAA,EAAAA,OAAH,8ZCpCNI,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EACnBC,EAAY,SAAAH,GAAK,OAAIA,EAAMI,OAAOA,MAAjB,E,SCKfC,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MACXN,GAAWO,EAAAA,EAAAA,IAAYC,GAC7B,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MAEd,OAAQP,GACN,IAAK,OACHC,EAAQM,GACR,MAEF,IAAK,SACHJ,EAAUI,GACV,MAEA,QACE,OAEP,EAoBGC,EAAQ,WACZP,EAAQ,IACRE,EAAU,GACX,EACG,OACE,UAACpB,EAAD,CAAM0B,SAvBW,SAAAJ,GACnBA,EAAEK,iBACF,IAAMC,EAAa,CACjBX,KAAAA,EACAE,OAAAA,GAEuBZ,EAASsB,MAChC,SAAAC,GAAO,OAAIA,EAAQb,OAASA,GAAQa,EAAQX,SAAWA,CAAhD,IAGPY,MAAM,GAAD,OAAId,EAAJ,8BAGPL,EAASoB,EAAmBC,WAAWL,IACvCH,IAEH,EAOK,WACE,SAACvB,EAAD,sBACA,SAACC,EAAD,CACE+B,KAAK,OACLjB,KAAK,OACLkB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,YAAY,aACZd,MAAOP,EACPsB,SAAUlB,KAEZ,SAACnB,EAAD,sBACA,SAACC,EAAD,CACE+B,KAAK,MACLjB,KAAK,SACLkB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,YAAY,qBACZd,MAAOL,EACPoB,SAAUlB,KAEZ,SAACjB,EAAD,CAAQ8B,KAAK,SAAb,2BAKP,EC9EUM,EAAMvC,EAAAA,EAAAA,IAAH,4GAQHC,EAAQD,EAAAA,EAAAA,MAAH,8IASLE,EAAQF,EAAAA,EAAAA,MAAH,yQ,UCbLwC,EAAS,WACpB,IAAM7B,GAAWC,EAAAA,EAAAA,MACXH,GAASI,EAAAA,EAAAA,IAAYC,GAQ3B,OACE,UAACyB,EAAD,YACA,SAAC,EAAD,sCACA,SAAC,EAAD,CACEN,KAAK,OACLjB,KAAK,SACLqB,YAAY,eACZd,MAAOd,EACP6B,SAbiB,SAAAjB,GACnB,IAAQE,EAAUF,EAAEC,OAAZC,MACRZ,GAAS8B,EAAAA,EAAAA,GAAclB,GACxB,MAeF,EC3BYmB,EAAO1C,EAAAA,EAAAA,GAAH,uFAMJ2C,EAAW3C,EAAAA,EAAAA,GAAH,8CAIRG,EAASH,EAAAA,EAAAA,OAAH,qZCLN4C,EAAc,WACxB,IAAMjC,GAAWC,EAAAA,EAAAA,MACXN,GAAWO,EAAAA,EAAAA,IAAYC,GACvBL,GAASI,EAAAA,EAAAA,IAAYC,IAE3B+B,EAAAA,EAAAA,YAAU,WACPlC,EAASoB,EAAmBe,gBAC7B,GAAE,CAACnC,IAWR,OACG,8BACCL,EAASyC,OAAS,IAChB,SAACL,EAAD,UAX2BpC,EAASG,QAAO,SAAAoB,GACzC,OAAOA,EAAQb,KACZgC,cACAC,SAASxC,EAAOuC,cACpB,IAQsBE,KAAI,SAACrB,EAASsB,GAAV,OAC5B,UAACR,EAAD,WACGd,EAAQb,KADX,KACmBa,EAAQX,QACzB,SAAC,EAAD,CAAQkC,QAAS,kBAAMzC,EAASoB,EAAmBsB,cAAcxB,EAAQsB,IAAxD,EAAjB,sBAFaA,EADa,OAWhC,ECtCYG,EAAYtD,EAAAA,EAAAA,GAAH,6CAITuD,EAAQvD,EAAAA,EAAAA,GAAH,6CCGLwD,EAAW,WACpB,IAAM7C,GAAWC,EAAAA,EAAAA,MAWjB,OATAiC,EAAAA,EAAAA,YAAU,WACNlC,GAASmC,EAAAA,EAAAA,iBACV,GAAE,CAACnC,KAINkC,EAAAA,EAAAA,YAAU,WACRlC,GAASmC,EAAAA,EAAAA,iBACV,GAAE,CAACnC,KAEF,4BACE,SAAC2C,EAAD,yBACA,SAAC5C,EAAD,KACA,SAAC6C,EAAD,wBACA,SAACf,EAAD,KACA,SAACI,EAAD,MAGP,C","sources":["components/ContactForm/ContactForm.styled.js","redux/contacts/contactsSelectors.jsx","components/ContactForm/ContactForm.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.js"],"sourcesContent":["import styled from '@emotion/styled';\n\n\nexport const Form = styled.form`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nmargin-bottom: 20px;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 5px;\n  align-items: center;\n  font-size: 20px;\n  text-align: left;\n  width: 30%;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  margin-bottom: 20px;\n\n  padding: 10px;\n  width: 30%;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 15px;\n\n  &:focus,\n  &:hover {\n   border: 3px solid #89CFF0;\n   outline: inherit;\n`;\n\nexport const Button = styled.button`\ndisplay: inline-block;\nwidth: 150px;\npadding: 10px;\nbackground-color: #fff;\nfont-size: 14px;\nbox-shadow: 3px 6px 20px rgba(0.12, 0.12, 0.12, 0.12), \n1px 3px 4px rgba(0, 0, 0, 0.14), \n0px 0px 2px rgba(0, 0, 0, 0.2);\nborder-radius: 5px;\nborder: inherit;\ncursor: pointer;\ntext-transform: capitalize;\n\n&:focus,\n&:hover {\n    border: 3px solid #89CFF0;\n    outline: inherit;\n}\n`;","export const getContacts = state => state.contacts.items;\nexport const setFilter = state => state.filter.filter;","import React from 'react';\nimport { useState } from 'react';\nimport {Form, Label, Input, Button} from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\n\n  export const ContactForm = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(contactsSelectors.getContacts);\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n \n    const handleChange = e => {\n      const { name, value } = e.target;\n      \n      switch (name) {\n        case 'name':\n          setName(value);\n          break;\n\n        case 'number':\n          setNumber(value);\n          break;\n\n          default:\n            return;\n      }\n    };\n    \n    const handleSubmit = e => {\n      e.preventDefault(); \n      const newContact = { \n        name, \n        number,\n      };\n      const existingContact  = contacts.find(\n        contact => contact.name === name || contact.number === number\n      );\n      if(existingContact) {\n        alert(`${name} is already in contacts.`);\n        return;\n      } else {\n      dispatch(contactsOperations.addContact(newContact));\n      reset();  \n    } \n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n      return (\n        <Form onSubmit={handleSubmit}>\n          <Label> Name </Label>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            placeholder=\"Enter name\"\n            value={name}\n            onChange={handleChange}\n          />\n          <Label>Number</Label>\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            placeholder=\"Enter phone number\"\n            value={number}\n            onChange={handleChange}\n          />\n          <Button type=\"submit\">\n            Add contact\n          </Button>\n        </Form>\n      );\n  };\n  \n","import styled from '@emotion/styled';\n\nexport const Box = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\ntext-align: left;\n\n`;\n\nexport const Label = styled.label`\ndisplay: block;\nalign-items: center;\n  font-size: 20px;\n  text-align: left;\n  width: 30%;\n  margin-bottom: 5px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  padding: 10px;\n  width: 30%;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 15px;\n\n\n  &:focus,\n  &:hover {\n   border: 3px solid #89CFF0;\n   outline: inherit;\n`;","import {Box, Label, Input} from './Filter.styled';\nimport { filterContact } from '../../redux/filterSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsSelectors } from '../../redux/contacts';\n\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(contactsSelectors.setFilter);\n\n\n  const handleChange = e => {\n    const { value } = e.target;\n    dispatch(filterContact(value));\n  }; \n\n  return (\n    <Box>\n    <Label>Find contacts by Name </Label>\n    <Input\n      type=\"text\"\n      name=\"filter\"\n      placeholder=\"Enter filter\"\n      value={filter}\n      onChange={handleChange}\n    />\n   \n  </Box>\n  )\n}\n  \n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n`;\n\nexport const ListItem = styled.li`\nmargin-bottom: 20px;\n`;\n\nexport const Button = styled.button`\ndisplay: inline-block;\nmargin-left: 10px;\npadding: 5px;\nbackground-color: #fff;\nfont-size: 14px;\nwidth: 70px;\nbox-shadow: 3px 6px 20px rgba(0.12, 0.12, 0.12, 0.12), \n1px 3px 4px rgba(0, 0, 0, 0.14), \n0px 0px 2px rgba(0, 0, 0, 0.2);\nborder-radius: 5px;\nborder: inherit;\ncursor: pointer;\n\n\n&:focus,\n&:hover {\n    border: 3px solid #89CFF0;\n    outline: inherit;\n}\n`;","import { List, ListItem, Button } from './ContactList.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\nimport { useEffect} from 'react';\n\n\n\nexport const ContactList = () => {\n   const dispatch = useDispatch();\n   const contacts = useSelector(contactsSelectors.getContacts);\n   const filter = useSelector(contactsSelectors.setFilter);\n\n   useEffect(() => {\n      dispatch(contactsOperations.fetchContacts());\n    }, [dispatch]);\n\n   const getFilteredContacts = () => {\n      const filterContactsList = contacts.filter(contact => {\n        return contact.name\n          .toLowerCase()\n          .includes(filter.toLowerCase());\n      });\n    \n      return filterContactsList;\n    };\nreturn (\n   <>\n   {contacts.length > 0 && (\n      <List>\n      {getFilteredContacts().map((contact, id) => (\n     <ListItem key={id}>\n       {contact.name}: {contact.number}\n       <Button onClick={() => dispatch(contactsOperations.deleteContact(contact.id))}>\n        Delete</Button>\n     </ListItem>\n    ))}\n    </List>\n   )}\n   </> \n)\n}\n","import styled from '@emotion/styled';\n\nexport const MainTitle = styled.h1`\ntext-align: center;\n`;\n\nexport const Title = styled.h2`\ntext-align: center;\n`;","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from '../../redux/contacts/contactsOperations';\nimport { ContactForm }  from '../../components/ContactForm/ContactForm';\nimport { Filter } from '../../components/Filter/Filter';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { MainTitle, Title } from './Contacts.styled';\n\n\nexport const Contacts = () => {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n      }, [dispatch]);\n\n\n  \n    useEffect(() => {\n      dispatch(fetchContacts());\n    }, [dispatch]);\n    return (\n      <div>\n        <MainTitle>Phonebook</MainTitle>\n        <ContactForm />\n        <Title>Contacts</Title>\n        <Filter />\n        <ContactList  />\n      </div>\n    )  \n};"],"names":["Form","styled","Label","Input","Button","getContacts","state","contacts","items","setFilter","filter","ContactForm","dispatch","useDispatch","useSelector","contactsSelectors","useState","name","setName","number","setNumber","handleChange","e","target","value","reset","onSubmit","preventDefault","newContact","find","contact","alert","contactsOperations","addContact","type","pattern","title","required","placeholder","onChange","Box","Filter","filterContact","List","ListItem","ContactList","useEffect","fetchContacts","length","toLowerCase","includes","map","id","onClick","deleteContact","MainTitle","Title","Contacts"],"sourceRoot":""}